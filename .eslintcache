[{"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js":"1","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js":"2","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js":"3","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js":"4","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js":"5","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js":"6","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js":"7","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js":"8","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js":"9","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js":"10","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js":"11","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js":"12","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerSkillSlot.js":"13","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelect.js":"14","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelectItem.js":"15","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyles.js":"16","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyleItem.js":"17","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/Potions.js":"18"},{"size":6577,"mtime":1614834099448,"results":"19","hashOfConfig":"20"},{"size":811,"mtime":1616128566841,"results":"21","hashOfConfig":"20"},{"size":508,"mtime":1614830828224,"results":"22","hashOfConfig":"20"},{"size":7509,"mtime":1614830830972,"results":"23","hashOfConfig":"20"},{"size":6179,"mtime":1607825585674,"results":"24","hashOfConfig":"25"},{"size":15267,"mtime":1616740887729,"results":"26","hashOfConfig":"20"},{"size":822,"mtime":1616479582286,"results":"27","hashOfConfig":"20"},{"size":362,"mtime":1614830831279,"results":"28","hashOfConfig":"20"},{"size":1530,"mtime":1616304169285,"results":"29","hashOfConfig":"20"},{"size":752,"mtime":1616304253320,"results":"30","hashOfConfig":"20"},{"size":2520,"mtime":1614830830926,"results":"31","hashOfConfig":"20"},{"size":618,"mtime":1607751077394,"results":"32","hashOfConfig":"25"},{"size":1936,"mtime":1615860782767,"results":"33","hashOfConfig":"20"},{"size":2378,"mtime":1616575138183,"results":"34","hashOfConfig":"20"},{"size":1572,"mtime":1615859626600,"results":"35","hashOfConfig":"20"},{"size":2081,"mtime":1616304365363,"results":"36","hashOfConfig":"20"},{"size":688,"mtime":1616304426280,"results":"37","hashOfConfig":"20"},{"size":1234,"mtime":1616741465978,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1jhv7jo",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"k2xskb",{"filePath":"52","messages":"53","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js",[],["82","83"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js",["84"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport image from './../zulrah.png'\r\nimport MonsterSkillSlot from './MonsterSkillSlot'\r\nimport './../stylesheets/MonsterInfo.css'\r\n\r\nclass MonsterInfoCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            displayItems: [],\r\n            selected: ''\r\n        }\r\n        this.filterList = this.filterList.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        let pageNumber = 1;\r\n        let eMax_Pages = 57;\r\n        let a = new Date();\r\n        console.log('Beginning fetch....');\r\n        for(let i = pageNumber; i <= eMax_Pages; i++){\r\n        await fetch(`https://api.osrsbox.com/monsters?max_results=50&&page=${i}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                for (let j = 0; j < json._items.length; j++) {\r\n                    const {category, name, id} = json._items[j];\r\n                    if(category.includes('boss')){\r\n                        this.props.dispatch({\r\n                            type: 'ADD_BOSS',\r\n                            payload: {name: name.toLowerCase(), id: id}\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    async handleChange(event){\r\n        let itemList = this.props.allBosses;\r\n        const itemID = itemList.find(item => item.name === event.target.innerText).id;\r\n        await this.setState({selected: event.target.innerText});\r\n        console.log('NEW ITEM SELECTED:', this.state.selected, itemID);\r\n        await fetch(`https://api.osrsbox.com/monsters/${itemID}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                const {\r\n                    name,\r\n                    hitpoints, \r\n                    combat_level, \r\n                    id,        \r\n                    defence_level, \r\n                    magic_level, \r\n                    defence_stab,           \r\n                    defence_slash, \r\n                    defence_crush, \r\n                    defence_magic,              \r\n                    defence_ranged\r\n                } = json;\r\n                this.props.dispatch({\r\n                    type: `SELECTED_BOSS`,\r\n                    payload: {                    \r\n                        name: name,\r\n                        hitpoints: hitpoints,  \r\n                        combat_level: combat_level, \r\n                        id: id,     \r\n                        defence_level: defence_level, \r\n                        magic_level: magic_level, \r\n                        defence_stab: defence_stab,           \r\n                        defence_slash: defence_slash, \r\n                        defence_crush: defence_crush, \r\n                        defence_magic: defence_magic,              \r\n                        defence_ranged: defence_ranged\r\n                    }\r\n                })\r\n            }\r\n        ) \r\n    }\r\n    async filterList(event){\r\n        console.log('MONSTER CARD FILTER', event.target.value);\r\n        let currList = this.props.allBosses;\r\n        let newList = [];\r\n        for(let item of currList){\r\n            newList.push(item.name);\r\n        }\r\n        let displayList = [];\r\n        for(let item of newList){\r\n            if(item.includes(event.target.value.toLowerCase())){\r\n                displayList.push(item);\r\n            }\r\n        }\r\n        await this.setState({displayItems: displayList});\r\n    }\r\n\r\n    render(){\r\n        let firstRow = ['hitpoints', 'defence_level', 'magic_level'];\r\n        let secondRow = ['defence_stab', 'defence_slash', 'defence_crush'];\r\n        let thirdRow = ['defence_magic', 'defence_ranged'];\r\n        return(\r\n            <div className=\"card monster-card\">\r\n                <div className=\"row\">      \r\n                    <button type=\"button\" className=\"boss-select btn-default\" data-toggle=\"dropdown\">{this.props.selectedBoss.name}</button>\r\n                    <ul className=\"dropdown-menu scrollable-menu\" role=\"menu\">\r\n                        <input type=\"search\" onChange={this.filterList} className=\"search-bar\"></input>  \r\n                            {this.state.displayItems.map((item, index) =>{\r\n                                return(<li onClick={this.handleChange} key={index}>{item}</li>)\r\n                            }) }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"boss-img-card\">\r\n                        <img className=\"boss-img\" src={image} alt=\"\"></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row stats-row\">\r\n                        <div className=\"card form-card\">\r\n                            <div className=\"row\">\r\n                                {firstRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {secondRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>                            \r\n                            <div className=\"row\">\r\n                                {thirdRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allBosses: state.allBosses,\r\n        selectedBoss: state.selectedBoss\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MonsterInfoCard)\r\n",["85","86"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js",["87","88","89","90","91","92","93","94","95","96","97","98","99"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js",["100"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './Store';\nwindow.store = store;\ndocument.body.style.backgroundColor = '#2c2f33';\nfunction importAll(r) {\n  return r.keys().map(r);\n}\n\n/* const images = importAll(require.context('./assets/attackStyles/2h_sword', false, /\\.(png|jpe?g|svg)$/)); */\nReactDOM.render(\n  <Provider store={store}>\n    <App  /* images={images} *//>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js",["101","102"],"import React, { useState } from 'react'\r\nimport DropDownList from './DropDownList'\r\n\r\nconst SingleSlot = props => {\r\n    const [currList, setDisplayList] = useState({ items: props.listAll });\r\n\r\n    return (\r\n        <div>\r\n            <button type=\"button equip-slot\" className=\"btn btn-default\" data-toggle=\"dropdown\"></button>\r\n            {props.icon ? <img className=\"test\" src={`data:image/png;base64,${props.icon}`} alt=\"\"></img> : null}\r\n            <ul className=\"dropdown-menu scrollable-menu\" role=\"menu\">\r\n                <DropDownList\r\n                    listType= {props.listType}\r\n                    items={props.listAll} >\r\n                </DropDownList>  \r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SingleSlot","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerSkillSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelect.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelectItem.js",["103"],"import { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst PrayerSelectItem = (props) => {\r\n    const activePrayers = useSelector(state => state.activePrayers);\r\n    const dispatch = useDispatch();\r\n\r\n    const updatePrayers = () => {\r\n        let payload = activePrayers;\r\n        const { name } = props;\r\n        switch (name) {\r\n            case 'Clarity of Thought':\r\n            case 'Improved Reflexes':\r\n            case 'Incredible Reflexes': payload = { atk: name, str: payload.str, range: '', magic: '' };\r\n                break;\r\n            case 'Burst of Strength':\r\n            case 'Superhuman Strength':\r\n            case 'Ultimate Strength': payload = { atk: payload.atk, str: name, range: '', magic: '' };\r\n                break;\r\n            case 'Sharp Eye':\r\n            case 'Hawk Eye':\r\n            case 'Eagle Eye':\r\n            case 'Rigour': payload = { atk: '', str: '', range: name, magic: '' };\r\n                break;\r\n            case 'Mystic Will':\r\n            case 'Mystic Lore':\r\n            case 'Mystic Might':\r\n            case 'Augury': payload = { atk: '', str: '', range: '', magic: name };\r\n                break;\r\n            case 'Chivalry':\r\n            case 'Piety': payload = { atk: name, str: name, range: '', magic: '' };\r\n                break;\r\n        }\r\n        dispatch({\r\n            type: 'UPDATE_PRAYERS',\r\n            payload: payload\r\n        })\r\n    }\r\n\r\n    return (\r\n        <img onClick={updatePrayers} className=\"prayer-img\" src={props.icon} alt=\"\"></img>\r\n    )\r\n}\r\n\r\nexport default PrayerSelectItem\r\n","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyles.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyleItem.js",["104"],"import React, { useState } from 'react'\r\n\r\nconst AttackStyleItem = (props) => {\r\n    \r\n    const handleSelect = () => {\r\n        if(props.data.selected){\r\n            props.onSelectStyle(parseInt(props.id));\r\n        }\r\n        else{\r\n            props.onSelectStyle(parseInt(props.id));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.data.selected ?\r\n                <img onClick={handleSelect} src={props.data.img} className=\"attack-style-img mr-0.5\" alt=\"\"></img>\r\n            :\r\n                <img onClick={handleSelect} src={props.data.img} className=\"attack-style-img mr-0.5\" alt=\"\"></img>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttackStyleItem","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/Potions.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":21,"column":13,"nodeType":"111","messageId":"112","endLine":21,"endColumn":14},{"ruleId":"105","replacedBy":"113"},{"ruleId":"107","replacedBy":"114"},{"ruleId":"109","severity":1,"message":"115","line":12,"column":17,"nodeType":"111","messageId":"112","endLine":12,"endColumn":22},{"ruleId":"109","severity":1,"message":"116","line":12,"column":24,"nodeType":"111","messageId":"112","endLine":12,"endColumn":30},{"ruleId":"109","severity":1,"message":"117","line":12,"column":32,"nodeType":"111","messageId":"112","endLine":12,"endColumn":38},{"ruleId":"109","severity":1,"message":"118","line":12,"column":40,"nodeType":"111","messageId":"112","endLine":12,"endColumn":45},{"ruleId":"109","severity":1,"message":"119","line":12,"column":47,"nodeType":"111","messageId":"112","endLine":12,"endColumn":52},{"ruleId":"120","severity":1,"message":"121","line":36,"column":9,"nodeType":"122","messageId":"123","endLine":56,"endColumn":10},{"ruleId":"109","severity":1,"message":"115","line":66,"column":17,"nodeType":"111","messageId":"112","endLine":66,"endColumn":22},{"ruleId":"109","severity":1,"message":"116","line":66,"column":24,"nodeType":"111","messageId":"112","endLine":66,"endColumn":30},{"ruleId":"109","severity":1,"message":"117","line":66,"column":32,"nodeType":"111","messageId":"112","endLine":66,"endColumn":38},{"ruleId":"109","severity":1,"message":"118","line":66,"column":40,"nodeType":"111","messageId":"112","endLine":66,"endColumn":45},{"ruleId":"109","severity":1,"message":"119","line":66,"column":47,"nodeType":"111","messageId":"112","endLine":66,"endColumn":52},{"ruleId":"109","severity":1,"message":"124","line":103,"column":13,"nodeType":"111","messageId":"112","endLine":103,"endColumn":29},{"ruleId":"109","severity":1,"message":"125","line":104,"column":13,"nodeType":"111","messageId":"112","endLine":104,"endColumn":29},{"ruleId":"109","severity":1,"message":"126","line":10,"column":10,"nodeType":"111","messageId":"112","endLine":10,"endColumn":19},{"ruleId":"109","severity":1,"message":"127","line":5,"column":12,"nodeType":"111","messageId":"112","endLine":5,"endColumn":20},{"ruleId":"109","severity":1,"message":"128","line":5,"column":22,"nodeType":"111","messageId":"112","endLine":5,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":10,"column":9,"nodeType":"122","messageId":"123","endLine":32,"endColumn":10},{"ruleId":"109","severity":1,"message":"129","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar",["130"],["131"],"'level' is assigned a value but never used.","'potion' is assigned a value but never used.","'prayer' is assigned a value but never used.","'style' is assigned a value but never used.","'other' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'magicPrayerBoost' is assigned a value but never used.","'rangePrayerBoost' is assigned a value but never used.","'importAll' is defined but never used.","'currList' is assigned a value but never used.","'setDisplayList' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]