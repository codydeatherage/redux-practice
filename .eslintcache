[{"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js":"1","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js":"2","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js":"3","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js":"4","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js":"5","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js":"6","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js":"7","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js":"8","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js":"9","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js":"10","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js":"11","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js":"12"},{"size":6318,"mtime":1607752992669,"results":"13","hashOfConfig":"14"},{"size":3748,"mtime":1607418477551,"results":"15","hashOfConfig":"14"},{"size":7730,"mtime":1607657980533,"results":"16","hashOfConfig":"14"},{"size":4479,"mtime":1607417305959,"results":"17","hashOfConfig":"14"},{"size":6179,"mtime":1607825585674,"results":"18","hashOfConfig":"14"},{"size":4349,"mtime":1607824982263,"results":"19","hashOfConfig":"14"},{"size":636,"mtime":1607755915930,"results":"20","hashOfConfig":"14"},{"size":362,"mtime":1606531617959,"results":"21","hashOfConfig":"14"},{"size":3290,"mtime":1607408796496,"results":"22","hashOfConfig":"14"},{"size":3473,"mtime":1607509323006,"results":"23","hashOfConfig":"14"},{"size":2520,"mtime":1607417366043,"results":"24","hashOfConfig":"14"},{"size":618,"mtime":1607751077394,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"k2xskb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js",["53"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js",[],["54","55"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js",["56"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js",[],["57","58"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js",["59"],"import React, {Component} from 'react'\r\nimport {connect} from 'react-redux';\r\n\r\nclass DropDownList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            equipped: '',\r\n            icon: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async handleChange(event){\r\n        let itemList = [];\r\n        switch(this.props.type){\r\n            case 'weapon' : itemList = this.props.allWeapons; break;\r\n            case 'helm' : itemList = this.props.allHelms; break;\r\n            case 'cape' : itemList = this.props.allCapes; break;\r\n            case 'neck' : itemList = this.props.allNecks; break;\r\n            case 'ammo' : itemList = this.props.allAmmo; break;\r\n            case 'body' : itemList = this.props.allBodies; break;\r\n            case 'offhand' : itemList = this.props.allShields; break;\r\n            case 'legs' : itemList = this.props.allLegs; break;\r\n            case 'hand' : itemList = this.props.allHands; break;\r\n            case 'feet' : itemList = this.props.allFeet; break;\r\n            case 'ring' : itemList = this.props.allRings; break;\r\n            default: itemList = [];\r\n        }\r\n        const itemID = itemList.find(item => item.name === event.target.innerText).id;\r\n    \r\n        await this.setState({equipped: event.target.innerText});\r\n        console.log('NEW ITEM SELECTED:', this.state.equipped, itemID);\r\n        await fetch(`https://api.osrsbox.com/equipment/${itemID}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                const {equipment, icon} = json;\r\n                let dispatchType = this.props.type.toUpperCase();\r\n                console.log('DISPATCH: ', dispatchType);\r\n                this.setState({icon: icon});\r\n                this.props.dispatch({\r\n                    type: `CHANGE_${dispatchType}`,\r\n                    payload: {name: this.state.equipped, icon: icon}\r\n                })\r\n            }\r\n        ) \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.props.items.map((item, index) =>{\r\n                return(<li onClick={this.handleChange} key={index}>{item}</li>)\r\n            }) \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        allWeapons: state.allWeapons,\r\n        allAmmo: state.allAmmo,\r\n        allBodies: state.allBodies,\r\n        allCapes: state.allCapes,\r\n        allNecks: state.allNecks,\r\n        allShields: state.allShields,\r\n        allLegs: state.allLegs,\r\n        allHands: state.allHands,\r\n        allFeet: state.allFeet,\r\n        allRings: state.allRings,\r\n        allHelms: state.allHelms,\r\n        equippedHead: state.equippedHead,\r\n        equippedCape: state.equippedCape,\r\n        equippedNeck: state.equippedNeck,\r\n        equippedAmmo: state.equippedAmmo,\r\n        equippedWeapon: state.equippedWeapon,\r\n        equippedOffhand: state.equippedOffhand,\r\n        equippedLegs: state.equippedLegs,\r\n        equippedHands: state.equippedHands,\r\n        equippedFeet: state.equippedFeet,\r\n        equippedRing: state.equippedRing \r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(DropDownList)","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js",[],{"ruleId":"60","severity":1,"message":"61","line":146,"column":7,"nodeType":"62","messageId":"63","endLine":149,"endColumn":28},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":21,"column":13,"nodeType":"70","messageId":"71","endLine":21,"endColumn":14},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"68","severity":1,"message":"74","line":37,"column":24,"nodeType":"70","messageId":"71","endLine":37,"endColumn":33},"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar",["75"],["76"],"'equipment' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]