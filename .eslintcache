[{"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js":"1","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js":"2","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js":"3","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js":"4","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js":"5","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js":"6","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js":"7","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js":"8","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js":"9","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js":"10","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js":"11","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js":"12","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerSkillSlot.js":"13"},{"size":3586,"mtime":1610168722135,"results":"14","hashOfConfig":"15"},{"size":4349,"mtime":1608253997827,"results":"16","hashOfConfig":"15"},{"size":508,"mtime":1608534110712,"results":"17","hashOfConfig":"15"},{"size":5957,"mtime":1609299739789,"results":"18","hashOfConfig":"15"},{"size":6179,"mtime":1607825585674,"results":"19","hashOfConfig":"15"},{"size":9610,"mtime":1610246963767,"results":"20","hashOfConfig":"15"},{"size":636,"mtime":1607755915930,"results":"21","hashOfConfig":"15"},{"size":362,"mtime":1606531617959,"results":"22","hashOfConfig":"15"},{"size":2163,"mtime":1610167622057,"results":"23","hashOfConfig":"15"},{"size":2349,"mtime":1610240295219,"results":"24","hashOfConfig":"15"},{"size":2520,"mtime":1607417366043,"results":"25","hashOfConfig":"15"},{"size":618,"mtime":1607751077394,"results":"26","hashOfConfig":"15"},{"size":5644,"mtime":1610248728607,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k2xskb",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js",[],["61","62"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js",[],["63","64"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js",["65"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport image from './../zulrah.png'\r\nimport MonsterSkillSlot from './MonsterSkillSlot'\r\nimport './../stylesheets/MonsterInfo.css'\r\n\r\nclass MonsterInfoCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            displayItems: [],\r\n            selected: ''\r\n        }\r\n        this.filterList = this.filterList.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        let pageNumber = 1;\r\n        let eMax_Pages = 57;\r\n        let a = new Date();\r\n        console.log('Beginning fetch....');\r\n        for(let i = pageNumber; i <= eMax_Pages; i++){\r\n        await fetch(`https://api.osrsbox.com/monsters?max_results=50&&page=${i}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                for (let j = 0; j < json._items.length; j++) {\r\n                    const {category, name, id} = json._items[j];\r\n                    if(category.includes('boss')){\r\n                        this.props.dispatch({\r\n                            type: 'ADD_BOSS',\r\n                            payload: {name: name.toLowerCase(), id: id}\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    async handleChange(event){\r\n        let itemList = this.props.allBosses;\r\n        const itemID = itemList.find(item => item.name === event.target.innerText).id;\r\n        await this.setState({selected: event.target.innerText});\r\n        console.log('NEW ITEM SELECTED:', this.state.selected, itemID);\r\n        await fetch(`https://api.osrsbox.com/monsters/${itemID}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                const {\r\n                    name,\r\n                    hitpoints, \r\n                    combat_level, \r\n                    id,        \r\n                    defence_level, \r\n                    magic_level, \r\n                    defence_stab,           \r\n                    defence_slash, \r\n                    defence_crush, \r\n                    defence_magic,              \r\n                    defence_ranged\r\n                } = json;\r\n                this.props.dispatch({\r\n                    type: `SELECTED_BOSS`,\r\n                    payload: {                    \r\n                        name: name,\r\n                        hitpoints: hitpoints,  \r\n                        combat_level: combat_level, \r\n                        id: id,     \r\n                        defence_level: defence_level, \r\n                        magic_level: magic_level, \r\n                        defence_stab: defence_stab,           \r\n                        defence_slash: defence_slash, \r\n                        defence_crush: defence_crush, \r\n                        defence_magic: defence_magic,              \r\n                        defence_ranged: defence_ranged\r\n                    }\r\n                })\r\n            }\r\n        ) \r\n    }\r\n    async filterList(event){\r\n        console.log('MONSTER CARD FILTER', event.target.value);\r\n        let currList = this.props.allBosses;\r\n        let newList = [];\r\n        for(let item of currList){\r\n            newList.push(item.name);\r\n        }\r\n        let displayList = [];\r\n        for(let item of newList){\r\n            if(item.includes(event.target.value.toLowerCase())){\r\n                displayList.push(item);\r\n            }\r\n        }\r\n        await this.setState({displayItems: displayList});\r\n    }\r\n\r\n    render(){\r\n        let firstRow = ['hitpoints', 'defence_level', 'magic_level'];\r\n        let secondRow = ['defence_stab', 'defence_slash', 'defence_crush'];\r\n        let thirdRow = ['defence_magic', 'defence_ranged'];\r\n        return(\r\n            <div className=\"card monster-card\">\r\n                <div className=\"row\">      \r\n                    <button type=\"button\" className=\"boss-select btn-default\" data-toggle=\"dropdown\">{this.props.selectedBoss.name}</button>\r\n                    <ul className=\"dropdown-menu scrollable-menu\" role=\"menu\">\r\n                        <input type=\"search\" onChange={this.filterList} className=\"search-bar\"></input>  \r\n                            {this.state.displayItems.map((item, index) =>{\r\n                                return(<li onClick={this.handleChange} key={index}>{item}</li>)\r\n                            }) }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"boss-img-card\">\r\n                        <img className=\"boss-img\" src={image} alt=\"\"></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row stats-row\">\r\n                        <div className=\"card form-card\">\r\n                            <div className=\"row\">\r\n                                {firstRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {secondRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>                            \r\n                            <div className=\"row\">\r\n                                {thirdRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allBosses: state.allBosses,\r\n        selectedBoss: state.selectedBoss\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MonsterInfoCard)\r\n",["66","67"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js",["68","69","70","71","72","73","74","75","76","77","78"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js",[],["79","80"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js",[],["81","82"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js",[],["83","84"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerSkillSlot.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":21,"column":13,"nodeType":"93","messageId":"94","endLine":21,"endColumn":14},{"ruleId":"85","replacedBy":"95"},{"ruleId":"87","replacedBy":"96"},{"ruleId":"91","severity":1,"message":"97","line":9,"column":16,"nodeType":"93","messageId":"94","endLine":9,"endColumn":21},{"ruleId":"91","severity":1,"message":"98","line":9,"column":23,"nodeType":"93","messageId":"94","endLine":9,"endColumn":29},{"ruleId":"91","severity":1,"message":"99","line":9,"column":31,"nodeType":"93","messageId":"94","endLine":9,"endColumn":37},{"ruleId":"91","severity":1,"message":"100","line":9,"column":39,"nodeType":"93","messageId":"94","endLine":9,"endColumn":44},{"ruleId":"91","severity":1,"message":"101","line":9,"column":46,"nodeType":"93","messageId":"94","endLine":9,"endColumn":51},{"ruleId":"91","severity":1,"message":"97","line":48,"column":16,"nodeType":"93","messageId":"94","endLine":48,"endColumn":21},{"ruleId":"91","severity":1,"message":"98","line":48,"column":23,"nodeType":"93","messageId":"94","endLine":48,"endColumn":29},{"ruleId":"91","severity":1,"message":"99","line":48,"column":31,"nodeType":"93","messageId":"94","endLine":48,"endColumn":37},{"ruleId":"91","severity":1,"message":"100","line":48,"column":39,"nodeType":"93","messageId":"94","endLine":48,"endColumn":44},{"ruleId":"91","severity":1,"message":"101","line":48,"column":46,"nodeType":"93","messageId":"94","endLine":48,"endColumn":51},{"ruleId":"91","severity":1,"message":"102","line":59,"column":15,"nodeType":"93","messageId":"94","endLine":59,"endColumn":22},{"ruleId":"85","replacedBy":"103"},{"ruleId":"87","replacedBy":"104"},{"ruleId":"85","replacedBy":"105"},{"ruleId":"87","replacedBy":"106"},{"ruleId":"85","replacedBy":"107"},{"ruleId":"87","replacedBy":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar",["109"],["110"],"'level' is assigned a value but never used.","'potion' is assigned a value but never used.","'prayer' is assigned a value but never used.","'style' is assigned a value but never used.","'other' is assigned a value but never used.","'prayers' is assigned a value but never used.",["109"],["110"],["109"],["110"],["109"],["110"],"no-global-assign","no-unsafe-negation"]