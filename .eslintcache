[{"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js":"1","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js":"2","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js":"3","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js":"4","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js":"5","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js":"6","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js":"7","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js":"8","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js":"9","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js":"10","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js":"11"},{"size":5432,"mtime":1607409562993,"results":"12","hashOfConfig":"13"},{"size":7886,"mtime":1607416360795,"results":"14","hashOfConfig":"13"},{"size":9207,"mtime":1607409787089,"results":"15","hashOfConfig":"13"},{"size":2494,"mtime":1607416032582,"results":"16","hashOfConfig":"13"},{"size":277,"mtime":1606533391542,"results":"17","hashOfConfig":"13"},{"size":227,"mtime":1606533812034,"results":"18","hashOfConfig":"13"},{"size":635,"mtime":1606531617948,"results":"19","hashOfConfig":"13"},{"size":362,"mtime":1606531617959,"results":"20","hashOfConfig":"13"},{"size":3290,"mtime":1607408796496,"results":"21","hashOfConfig":"13"},{"size":3472,"mtime":1607408461933,"results":"22","hashOfConfig":"13"},{"size":2208,"mtime":1607416163666,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"k2xskb",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js",["51"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js",["52","53","54","55","56","57","58","59"],"import React, { Component } from 'react'\nimport './App.css'\nimport { connect } from 'react-redux'\nimport PlayerInfoCard from './components/PlayerInfoCard'\nimport MonsterInfoCard from './components/MonsterInfoCard'\nimport DataPanel from './components/DataPanel'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      value: '',\n      postId: 2\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dispatcher = this.dispatcher.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.dispatch({\n      type: 'ADD_POST',\n      payload: { id: this.state.postId, title: this.state.value }\n    })\n\n    this.setState({ postId: this.state.postId + 1 })\n  }\n  dispatcher(slot, payload, icon){\n    if(slot === 'weapon' || slot === '2h'){\n      if(!this.props.allWeapons.find(item => item.name === payload.name)){ /* &&\n         !this.props.allWeapons.find(item=>item.name === payload.name.slice(0, -3)) &&\n         !this.props.allWeapons.find(item=>item.name === payload.name.slice(0, -4)) */\n          if(!payload.name.includes('(p)') && !payload.name.includes('(p+)') && !payload.name.includes('(p++)')\n            && !payload.name.includes('(nz)') && !payload.name.includes('(kp)') && !payload.name.includes('corrupted')\n            && !payload.name.includes('crystal staff') && !payload.name.includes('(basic)') && !payload.name.includes('(attuned)')\n            && !payload.name.includes('(perfected)')){   \n            this.props.dispatch({\n                type: 'ADD_WEAPON',\n                payload: payload\n              })\n          }\n      }\n      \n    }\n\n    switch(slot){\n      case 'ring':\n          if(!this.props.allRings.find(item => \n            item.name === payload.name\n            ) /* && !this.props.allRings.find(item=>item.name.slice(0, -3) === payload.name.slice(0, -3) */\n              && !this.props.allRings.find(item=>item.icon === icon)){\n\n              this.props.dispatch({\n                type: `ADD_${slot.toUpperCase()}`,\n                payload: payload\n              });\n            }\n          else if(this.props.allRings.find(item => \n            item.name === payload.name\n            ) || this.props.allRings.find(item=>item.name.slice(0, -3) === payload.name.slice(0, -3))){\n             /*  console.log('DUPLICATE RING FOUND: ', payload.name) */\n            } break;\n      case 'cape':\n          if(!this.props.allCapes.find(item =>item.name === payload.name) \n            && !payload.name.includes('team-') && !payload.name.includes('fremennik ')){\n              this.props.dispatch({\n                type: `ADD_${slot.toUpperCase()}`,\n                payload: payload\n              });\n            }\n          else if(this.props.allCapes.find(item => \n            item.name === payload.name\n            )){\n              /* console.log('DUPLICATE CAPE FOUND: ', payload.name) */\n            } break;\n      case 'head':\n        if(!this.props.allHelms.find(item => item.name === payload.name)){\n          this.props.dispatch({\n            type: `ADD_${slot.toUpperCase()}`,\n            payload: payload\n          }); break;\n        }\n      case 'neck':\n        if(!this.props.allNecks.find(item => item.name === payload.name)){\n          if(!payload.name.includes('(') || payload.name.includes('(e)') || payload.name.includes('(ei)')){ \n            this.props.dispatch({\n              type: `ADD_${slot.toUpperCase()}`,\n              payload: payload\n            }); break;\n          }\n        }\n      case 'ammo':\n        if(!this.props.allAmmo.find(item => item.name === payload.name)){\n          if(!payload.name.includes('(') || payload.name.includes('(e)' \n            || payload.name.includes('fire') || payload.name.includes('brutal'))){ \n            this.props.dispatch({\n              type: `ADD_${slot.toUpperCase()}`,\n              payload: payload\n            }); break;\n          }\n        }\n      case 'body':\n        if(!this.props.allBodies.find(item => item.name === payload.name)){\n          /* if(!payload.name.includes('(') || payload.name.includes('(e)' \n            || payload.name.includes('fire') || payload.name.includes('brutal'))){  */\n            this.props.dispatch({\n              type: `ADD_${slot.toUpperCase()}`,\n              payload: payload\n            }); break;   \n        }\n        case 'legs':\n          if(!this.props.allLegs.find(item => item.name === payload.name)){\n            /* if(!payload.name.includes('(') || payload.name.includes('(e)' \n              || payload.name.includes('fire') || payload.name.includes('brutal'))){  */\n              this.props.dispatch({\n                type: `ADD_${slot.toUpperCase()}`,\n                payload: payload\n              }); break;   \n          }\n        case 'shield':\n          if(!this.props.allShields.find(item => item.name === payload.name)){\n            /* if(!payload.name.includes('(') || payload.name.includes('(e)' \n              || payload.name.includes('fire') || payload.name.includes('brutal'))){  */\n              this.props.dispatch({\n                type: `ADD_${slot.toUpperCase()}`,\n                payload: payload\n              }); break;   \n          }\n        case 'hands':\n          if(!this.props.allHands.find(item => item.name === payload.name)){\n            /* if(!payload.name.includes('(') || payload.name.includes('(e)' \n              || payload.name.includes('fire') || payload.name.includes('brutal'))){  */\n              this.props.dispatch({\n                type: `ADD_${slot.toUpperCase()}`,\n                payload: payload\n              }); break;   \n          }\n        case 'feet':\n          if(!this.props.allFeet.find(item => item.name === payload.name)){\n            /* if(!payload.name.includes('(') || payload.name.includes('(e)' \n              || payload.name.includes('fire') || payload.name.includes('brutal'))){  */\n              this.props.dispatch({\n                type: `ADD_${slot.toUpperCase()}`,\n                payload: payload\n              }); break;   \n          }             \n      default: \n      \n    }\n  }\n//store.getState().allWeapons[store.getState().allWeapons.findIndex(i=>i.name === 'Elder maul')].stats\n  async componentDidMount() {\n    console.log('mounted');\n    let pageNumber = 1;\n    const eMax_Pages = 146;\n    let a = new Date();\n    console.log('Beginning fetch....');\n    for(let i = pageNumber; i <= eMax_Pages; i++){\n      await fetch(`https://api.osrsbox.com/equipment?page=${i}`)\n        .then(response => response.json())\n        .then(json => {\n          for (let j = 0; j < json._items.length; j++) {\n            const {name, equipment, id, icon} = json._items[j];\n            if(json._items[j].equipable_by_player === false || json._items[j].equipable === false){\n                 console.log('UNEQUIPPABLE:::>> ', name);\n               }\n            //filter out items that give minimal bonuses *prayer is omitted*\n            if(equipment.attack_stab > 5 || equipment.attack_slash > 5 || equipment.attack_crush > 5\n               || equipment.attack_magic > 5 || equipment.attack_ranged > 5 || equipment.defence_stab > 5\n               || equipment.defence_slash > 5 || equipment.defence_crush > 5 || equipment.defence_magic > 5\n               || equipment.defence_ranged > 5 || equipment.melee_strength > 5|| equipment.ranged_strength > 5\n               || equipment.magic_damage > 5\n              ){\n                \n                if(equipment.slot === 'weapon' || equipment.slot === '2h'){\n                  this.dispatcher(\n                    equipment.slot,\n                    {name: name.toLowerCase(), slot: equipment.slot, id: id},\n                    icon\n                  );\n                }\n                else{\n                  this.dispatcher(\n                    equipment.slot,\n                    {name: name.toLowerCase(), id:id},\n                    icon\n                  ); \n                }\n              }\n/*               else{\n                console.log('---DISCARDED STATLESS ITEM---', name);\n              } */\n\n          }\n     \n        })\n    }\n    let b = new Date();\n    console.log('DATA FETCH COMPLETE!');\n    console.log('Time to Complete(ms)', b - a );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"col-lg-4\">\n          <DataPanel></DataPanel>\n        </div>\n        <div className=\"col-lg-4\">\n          <PlayerInfoCard></PlayerInfoCard>\n        </div>\n        <div className=\"col-lg-4\">\n          <MonsterInfoCard></MonsterInfoCard>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    allWeapons: state.allWeapons,\n    allAmmo: state.allAmmo,\n    allBodies: state.allBodies,\n    allCapes: state.allCapes,\n    allNecks: state.allNecks,\n    allShields: state.allShields,\n    allLegs: state.allLegs,\n    allHands: state.allHands,\n    allFeet: state.allFeet,\n    allRings: state.allRings,\n    allHelms: state.allHelms,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)",["60","61"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js",[],["62","63"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js",[],["64","65"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js",[],["66","67"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js",["68"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js",[],{"ruleId":"69","severity":1,"message":"70","line":125,"column":7,"nodeType":"71","messageId":"72","endLine":128,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":89,"column":7,"nodeType":"71","messageId":"75","endLine":97,"endColumn":10},{"ruleId":"73","severity":1,"message":"74","line":98,"column":7,"nodeType":"71","messageId":"75","endLine":107,"endColumn":10},{"ruleId":"73","severity":1,"message":"74","line":108,"column":7,"nodeType":"71","messageId":"75","endLine":116,"endColumn":10},{"ruleId":"73","severity":1,"message":"74","line":117,"column":9,"nodeType":"71","messageId":"75","endLine":125,"endColumn":12},{"ruleId":"73","severity":1,"message":"74","line":126,"column":9,"nodeType":"71","messageId":"75","endLine":134,"endColumn":12},{"ruleId":"73","severity":1,"message":"74","line":135,"column":9,"nodeType":"71","messageId":"75","endLine":143,"endColumn":12},{"ruleId":"73","severity":1,"message":"74","line":144,"column":9,"nodeType":"71","messageId":"75","endLine":152,"endColumn":12},{"ruleId":"73","severity":1,"message":"76","line":153,"column":7,"nodeType":"71","messageId":"77","endLine":153,"endColumn":15},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"78","replacedBy":"84"},{"ruleId":"80","replacedBy":"85"},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":37,"column":24,"nodeType":"90","messageId":"91","endLine":37,"endColumn":33},"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-fallthrough","Expected a 'break' statement before 'case'.","case","Expected a 'break' statement before 'default'.","default","no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],["92"],["93"],["92"],["93"],"no-unused-vars","'equipment' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]