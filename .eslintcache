[{"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js":"1","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js":"2","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js":"3","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js":"4","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js":"5","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js":"6","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js":"7","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js":"8","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js":"9","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js":"10","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js":"11","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js":"12","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerSkillSlot.js":"13","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelect.js":"14","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelectItem.js":"15","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyles.js":"16","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyleItem.js":"17"},{"size":6059,"mtime":1612079412164,"results":"18","hashOfConfig":"19"},{"size":4349,"mtime":1608253997827,"results":"20","hashOfConfig":"19"},{"size":508,"mtime":1608534110712,"results":"21","hashOfConfig":"19"},{"size":7511,"mtime":1614309312744,"results":"22","hashOfConfig":"19"},{"size":6179,"mtime":1607825585674,"results":"23","hashOfConfig":"19"},{"size":24007,"mtime":1614310851045,"results":"24","hashOfConfig":"19"},{"size":636,"mtime":1607755915930,"results":"25","hashOfConfig":"19"},{"size":362,"mtime":1606531617959,"results":"26","hashOfConfig":"19"},{"size":2506,"mtime":1612319838734,"results":"27","hashOfConfig":"19"},{"size":2351,"mtime":1614309311261,"results":"28","hashOfConfig":"19"},{"size":2520,"mtime":1607417366043,"results":"29","hashOfConfig":"19"},{"size":618,"mtime":1607751077394,"results":"30","hashOfConfig":"19"},{"size":6451,"mtime":1614033849958,"results":"31","hashOfConfig":"19"},{"size":1104,"mtime":1610690188580,"results":"32","hashOfConfig":"19"},{"size":3974,"mtime":1612079627300,"results":"33","hashOfConfig":"19"},{"size":2044,"mtime":1614313988574,"results":"34","hashOfConfig":"19"},{"size":256,"mtime":1614314188029,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"k2xskb",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js",[],["79","80"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js",[],["81","82"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js",[],["83","84"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js",["85"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport image from './../zulrah.png'\r\nimport MonsterSkillSlot from './MonsterSkillSlot'\r\nimport './../stylesheets/MonsterInfo.css'\r\n\r\nclass MonsterInfoCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            displayItems: [],\r\n            selected: ''\r\n        }\r\n        this.filterList = this.filterList.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        let pageNumber = 1;\r\n        let eMax_Pages = 57;\r\n        let a = new Date();\r\n        console.log('Beginning fetch....');\r\n        for(let i = pageNumber; i <= eMax_Pages; i++){\r\n        await fetch(`https://api.osrsbox.com/monsters?max_results=50&&page=${i}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                for (let j = 0; j < json._items.length; j++) {\r\n                    const {category, name, id} = json._items[j];\r\n                    if(category.includes('boss')){\r\n                        this.props.dispatch({\r\n                            type: 'ADD_BOSS',\r\n                            payload: {name: name.toLowerCase(), id: id}\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    async handleChange(event){\r\n        let itemList = this.props.allBosses;\r\n        const itemID = itemList.find(item => item.name === event.target.innerText).id;\r\n        await this.setState({selected: event.target.innerText});\r\n        console.log('NEW ITEM SELECTED:', this.state.selected, itemID);\r\n        await fetch(`https://api.osrsbox.com/monsters/${itemID}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                const {\r\n                    name,\r\n                    hitpoints, \r\n                    combat_level, \r\n                    id,        \r\n                    defence_level, \r\n                    magic_level, \r\n                    defence_stab,           \r\n                    defence_slash, \r\n                    defence_crush, \r\n                    defence_magic,              \r\n                    defence_ranged\r\n                } = json;\r\n                this.props.dispatch({\r\n                    type: `SELECTED_BOSS`,\r\n                    payload: {                    \r\n                        name: name,\r\n                        hitpoints: hitpoints,  \r\n                        combat_level: combat_level, \r\n                        id: id,     \r\n                        defence_level: defence_level, \r\n                        magic_level: magic_level, \r\n                        defence_stab: defence_stab,           \r\n                        defence_slash: defence_slash, \r\n                        defence_crush: defence_crush, \r\n                        defence_magic: defence_magic,              \r\n                        defence_ranged: defence_ranged\r\n                    }\r\n                })\r\n            }\r\n        ) \r\n    }\r\n    async filterList(event){\r\n        console.log('MONSTER CARD FILTER', event.target.value);\r\n        let currList = this.props.allBosses;\r\n        let newList = [];\r\n        for(let item of currList){\r\n            newList.push(item.name);\r\n        }\r\n        let displayList = [];\r\n        for(let item of newList){\r\n            if(item.includes(event.target.value.toLowerCase())){\r\n                displayList.push(item);\r\n            }\r\n        }\r\n        await this.setState({displayItems: displayList});\r\n    }\r\n\r\n    render(){\r\n        let firstRow = ['hitpoints', 'defence_level', 'magic_level'];\r\n        let secondRow = ['defence_stab', 'defence_slash', 'defence_crush'];\r\n        let thirdRow = ['defence_magic', 'defence_ranged'];\r\n        return(\r\n            <div className=\"card monster-card\">\r\n                <div className=\"row\">      \r\n                    <button type=\"button\" className=\"boss-select btn-default\" data-toggle=\"dropdown\">{this.props.selectedBoss.name}</button>\r\n                    <ul className=\"dropdown-menu scrollable-menu\" role=\"menu\">\r\n                        <input type=\"search\" onChange={this.filterList} className=\"search-bar\"></input>  \r\n                            {this.state.displayItems.map((item, index) =>{\r\n                                return(<li onClick={this.handleChange} key={index}>{item}</li>)\r\n                            }) }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"boss-img-card\">\r\n                        <img className=\"boss-img\" src={image} alt=\"\"></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row stats-row\">\r\n                        <div className=\"card form-card\">\r\n                            <div className=\"row\">\r\n                                {firstRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {secondRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>                            \r\n                            <div className=\"row\">\r\n                                {thirdRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allBosses: state.allBosses,\r\n        selectedBoss: state.selectedBoss\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MonsterInfoCard)\r\n",["86","87"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js",[],["105","106"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js",[],["107","108"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js",[],["109","110"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerSkillSlot.js",["111"],"import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PrayerSelect from './PrayerSelect'\r\n\r\nclass PlayerSkillSlot extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.prayers = [//len = 16\r\n            {name: \"Clarity of Thought\", boost: 1.05, type: 'atk', icon:'https://oldschool.runescape.wiki/images/e/e1/Clarity_of_Thought.png?8d584'},\r\n            {name: \"Improved Reflexes\", boost: 1.10, type: 'atk', icon:'https://oldschool.runescape.wiki/images/7/7e/Improved_Reflexes.png?e38b5'},\r\n            {name: \"Incredible Reflexes\", boost: 1.15, type: 'atk', icon:'https://oldschool.runescape.wiki/images/8/85/Incredible_Reflexes.png?ecf9c'},\r\n            {name: \"Burst of Strength\", boosts: 1.05, type: 'str', icon:'https://oldschool.runescape.wiki/images/7/7b/Burst_of_Strength.png?18c47'},\r\n            {name: \"Superhuman Strength\", boost: 1.10, type: 'str', icon:'https://oldschool.runescape.wiki/images/0/08/Superhuman_Strength.png?d2621'},\r\n            {name: \"Ultimate Strength\", boost: 1.15, type: 'str', icon:'https://oldschool.runescape.wiki/images/3/3d/Ultimate_Strength.png?510a8'},\r\n            {name: \"Sharp Eye\", boost: 1.05, type: 'range', icon:'https://oldschool.runescape.wiki/images/a/a3/Sharp_Eye.png?18c47'},\r\n            {name: \"Hawk Eye\", boost: 1.10, type: 'range', icon:'https://oldschool.runescape.wiki/images/8/8b/Hawk_Eye.png?54ee9'},\r\n            {name: \"Eagle Eye\", boost: 1.15, type: 'range', icon:'https://oldschool.runescape.wiki/images/d/d5/Eagle_Eye.png?4a200'},\r\n            {name: \"Mystic Will\", boost: 1.05, type: 'magic', icon:'https://oldschool.runescape.wiki/images/2/23/Mystic_Will.png?20461'},\r\n            {name: \"Mystic Lore\", boost: 1.10, type: 'magic', icon:'https://oldschool.runescape.wiki/images/d/d1/Mystic_Lore.png?097d2'},\r\n            {name: \"Mystic Might\", boost: 1.15, type: 'magic', icon:'https://oldschool.runescape.wiki/images/0/03/Mystic_Might.png?b0218'},\r\n            {name: \"Chivalry\", atk_boost: 1.15, str_boost: 1.18, type:'atk/str', icon:'https://oldschool.runescape.wiki/images/1/16/Chivalry.png?58bc5'},\r\n            {name: \"Piety\", atk_boost: 1.20, str_boost: 1.23, type:'atk/str', icon:'https://oldschool.runescape.wiki/images/a/a2/Piety.png?58239'},\r\n            {name: \"Rigour\", range_atk_boost: 1.20, range_str_boost: 1.23, type:'range', icon:'https://oldschool.runescape.wiki/images/5/5b/Rigour.png?159e1'},\r\n            {name: \"Augury\", boost: 1.25, type: 'magic', icon:'https://oldschool.runescape.wiki/images/9/93/Augury.png?f234e'}\r\n        ]\r\n        this.prayersToDisplay = [];\r\n        switch(this.props.slot){\r\n            case 'atk_level' : for(let pray of this.prayers){\r\n                                    if(pray.type === 'atk' || pray.type === 'atk/str'){\r\n                                        this.prayersToDisplay.push(pray);\r\n                                    }\r\n                                }; break;\r\n            case 'str_level' : for(let pray of this.prayers){\r\n                                    if(pray.type === 'str' || pray.type === 'atk/str'){\r\n                                        this.prayersToDisplay.push(pray);\r\n                                    }\r\n                                }; break;                 \r\n            case 'magic_level' : for(let pray of this.prayers){\r\n                                    if(pray.type === 'magic'){\r\n                                        this.prayersToDisplay.push(pray);\r\n                                    }\r\n                                }; break;\r\n            case 'ranged_level' : for(let pray of this.prayers){\r\n                                    if(pray.type === 'range'){\r\n                                        this.prayersToDisplay.push(pray);\r\n                                    }\r\n                                }; break;\r\n            default: console.log('Error displaying prayers...', this.props.slot);                                                       \r\n        }\r\n    }\r\n    updatePrayers(){\r\n        console.log(this);\r\n    }\r\n    handleChange(event){\r\n        if(event.target.value.length > 2){\r\n            event.target.value = event.target.value.substr(0, 2);\r\n        }\r\n        const{atk, str, range, magic} = this.props.playerStats;\r\n        let payload = {atk: atk, str: str, magic: magic, range: range};\r\n        const input = parseInt(event.target.value);\r\n        switch(this.props.slot){\r\n            case 'atk_level' : event.target.value !== '' ? payload.atk = input : payload.atk = 1; break;\r\n            case 'str_level' : event.target.value !== '' ? payload.str = input : payload.str = 1; break;                  \r\n            case 'magic_level' : event.target.value !== '' ? payload.magic = input : payload.magic = 1; break;\r\n            case 'ranged_level' : event.target.value !== '' ? payload.range = input : payload.range = 1; break;\r\n            default: console.log('Error modifying player stat ', this.props.slot);                                                       \r\n        }\r\n        this.props.dispatch({\r\n            type: 'CHANGE_PLAYER_STAT',\r\n            payload: payload\r\n        });    \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"form-input player-stat dropright\">\r\n                <div className=\"stat-icon my-auto\" id={this.props.slot}></div>\r\n                <div className=\"player-stat-info\">\r\n                    {this.props.bonuses.potion === 1 ? \r\n                        <div className=\"boosted-stat\">{this.props.value - 1}</div> \r\n                        :\r\n                         <div className=\"boosted-stat\">{this.props.value}</div>\r\n                    }\r\n                    <div className=\"stat-slash\">/</div>\r\n                    <input onChange={this.handleChange} type=\"text\" className=\"player-stat-input\"></input>\r\n\r\n                </div>\r\n                {/* <PrayerSelect prayersToDisplay={this.prayersToDisplay} slot={this.props.slot}></PrayerSelect> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        bonuses: state.bonuses,\r\n        selectedBoss: state.selectedBoss,\r\n        playerStats: state.playerStats\r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(PlayerSkillSlot)","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelect.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelectItem.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyles.js",["112","113","114","115","116"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyleItem.js",["117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"120","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":21,"column":13,"nodeType":"128","messageId":"129","endLine":21,"endColumn":14},{"ruleId":"118","replacedBy":"130"},{"ruleId":"120","replacedBy":"131"},{"ruleId":"126","severity":1,"message":"132","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":12},{"ruleId":"126","severity":1,"message":"133","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":12},{"ruleId":"126","severity":1,"message":"134","line":8,"column":8,"nodeType":"128","messageId":"129","endLine":8,"endColumn":12},{"ruleId":"126","severity":1,"message":"135","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":12},{"ruleId":"126","severity":1,"message":"136","line":14,"column":16,"nodeType":"128","messageId":"129","endLine":14,"endColumn":21},{"ruleId":"126","severity":1,"message":"137","line":14,"column":23,"nodeType":"128","messageId":"129","endLine":14,"endColumn":29},{"ruleId":"126","severity":1,"message":"138","line":14,"column":31,"nodeType":"128","messageId":"129","endLine":14,"endColumn":37},{"ruleId":"126","severity":1,"message":"139","line":14,"column":39,"nodeType":"128","messageId":"129","endLine":14,"endColumn":44},{"ruleId":"126","severity":1,"message":"140","line":14,"column":46,"nodeType":"128","messageId":"129","endLine":14,"endColumn":51},{"ruleId":"126","severity":1,"message":"136","line":27,"column":16,"nodeType":"128","messageId":"129","endLine":27,"endColumn":21},{"ruleId":"126","severity":1,"message":"137","line":27,"column":23,"nodeType":"128","messageId":"129","endLine":27,"endColumn":29},{"ruleId":"126","severity":1,"message":"138","line":27,"column":31,"nodeType":"128","messageId":"129","endLine":27,"endColumn":37},{"ruleId":"126","severity":1,"message":"139","line":27,"column":39,"nodeType":"128","messageId":"129","endLine":27,"endColumn":44},{"ruleId":"126","severity":1,"message":"140","line":27,"column":46,"nodeType":"128","messageId":"129","endLine":27,"endColumn":51},{"ruleId":"126","severity":1,"message":"141","line":38,"column":15,"nodeType":"128","messageId":"129","endLine":38,"endColumn":22},{"ruleId":"126","severity":1,"message":"142","line":83,"column":13,"nodeType":"128","messageId":"129","endLine":83,"endColumn":29},{"ruleId":"126","severity":1,"message":"143","line":84,"column":13,"nodeType":"128","messageId":"129","endLine":84,"endColumn":29},{"ruleId":"118","replacedBy":"144"},{"ruleId":"120","replacedBy":"145"},{"ruleId":"118","replacedBy":"146"},{"ruleId":"120","replacedBy":"147"},{"ruleId":"118","replacedBy":"148"},{"ruleId":"120","replacedBy":"149"},{"ruleId":"126","severity":1,"message":"150","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":20},{"ruleId":"126","severity":1,"message":"151","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":9},{"ruleId":"126","severity":1,"message":"132","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":12},{"ruleId":"126","severity":1,"message":"133","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":12},{"ruleId":"126","severity":1,"message":"134","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":12},{"ruleId":"126","severity":1,"message":"135","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":12},{"ruleId":"152","severity":1,"message":"153","line":8,"column":17,"nodeType":"154","endLine":8,"endColumn":43},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],["155"],["156"],["155"],["156"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar",["155"],["156"],"'img1' is defined but never used.","'img2' is defined but never used.","'img3' is defined but never used.","'img4' is defined but never used.","'level' is assigned a value but never used.","'potion' is assigned a value but never used.","'prayer' is assigned a value but never used.","'style' is assigned a value but never used.","'other' is assigned a value but never used.","'prayers' is assigned a value but never used.","'magicPrayerBoost' is assigned a value but never used.","'rangePrayerBoost' is assigned a value but never used.",["155"],["156"],["155"],["156"],["155"],["156"],"'PrayerSelect' is defined but never used.","'l' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]