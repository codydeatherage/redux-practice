[{"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js":"1","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js":"2","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js":"3","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js":"4","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js":"5","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js":"6","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js":"7","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js":"8","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js":"9","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js":"10","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js":"11"},{"size":5820,"mtime":1607507028219,"results":"12","hashOfConfig":"13"},{"size":3748,"mtime":1607418477551,"results":"14","hashOfConfig":"13"},{"size":7730,"mtime":1607657980533,"results":"15","hashOfConfig":"13"},{"size":4479,"mtime":1607417305959,"results":"16","hashOfConfig":"13"},{"size":7466,"mtime":1607665604956,"results":"17","hashOfConfig":"13"},{"size":476,"mtime":1607658045793,"results":"18","hashOfConfig":"13"},{"size":635,"mtime":1606531617948,"results":"19","hashOfConfig":"13"},{"size":362,"mtime":1606531617959,"results":"20","hashOfConfig":"13"},{"size":3290,"mtime":1607408796496,"results":"21","hashOfConfig":"13"},{"size":3473,"mtime":1607509323006,"results":"22","hashOfConfig":"13"},{"size":2520,"mtime":1607417366043,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"k2xskb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js",["51"],"import { createStore } from 'redux'\r\n\r\nconst initialState = {\r\n  posts: [{id: 1, title: 'Test Post'}],\r\n  allWeapons: [{name: '',  slot:'weapon', id: ''}],\r\n  allHelms: [{name: '', id: ''}],\r\n  allNecks: [{name: '', id: ''}],\r\n  allCapes: [{name: '', id: ''}],\r\n  allAmmo: [{name: '', id: ''}],\r\n  allBodies: [{name: '', id: ''}],\r\n  allShields: [{name: '', id: ''}],\r\n  allLegs: [{name: '', id: ''}],\r\n  allHands: [{name: '', id: ''}],\r\n  allFeet: [{name: '', id: ''}],\r\n  allRings: [{name: '', id: ''}],\r\n  allBosses: [{name: '', id: ''}],\r\n  loginModal: {\r\n    open: false\r\n  },\r\n  selectedBoss: {name:\"\", cmblvl: '1'},\r\n  equippedBody: {name:\"\", icon:\"\"},\r\n  equippedHead: {name:\"\", icon:\"\"},\r\n  equippedCape: {name:\"\", icon:\"\"},\r\n  equippedNeck: {name:\"\", icon:\"\"},\r\n  equippedAmmo: {name:\"\", icon:\"\"},\r\n  equippedWeapon: {name:\"\", icon:\"\"},\r\n  equippedOffhand: {name:\"\", icon:\"\"},\r\n  equippedLegs: {name:\"\", icon:\"\"},\r\n  equippedHands: {name:\"\", icon:\"\"},\r\n  equippedFeet: {name:\"\", icon:\"\"},\r\n  equippedRing: {name:\"\", icon:\"\"},\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const {type, payload} = action;\r\n    switch(type){\r\n      case 'SELECTED_BOSS': return{\r\n                              ...state,\r\n                              selectedBoss: payload\r\n                            }\r\n      case 'CHANGE_WEAPON': return{\r\n                              ...state,\r\n                              equippedWeapon: payload\r\n                            }\r\n      case 'CHANGE_CAPE': return{\r\n                              ...state,\r\n                              equippedCape: payload\r\n                            }      \r\n      case 'CHANGE_RING': return{\r\n                              ...state,\r\n                              equippedRing: payload\r\n                            }           \r\n      case 'CHANGE_HELM': return{\r\n                              ...state,\r\n                              equippedHead: payload\r\n                            }\r\n      case 'CHANGE_NECK': return{\r\n                              ...state,\r\n                              equippedNeck: payload\r\n                            }\r\n      case 'CHANGE_OFFHAND': return{\r\n                              ...state,\r\n                              equippedOffhand: payload\r\n                            }                          \r\n      case 'CHANGE_AMMO': return{\r\n                              ...state,\r\n                              equippedAmmo: payload\r\n                            }\r\n      case 'CHANGE_BODY': return{\r\n                              ...state,\r\n                              equippedBody: payload\r\n                            }\r\n      case 'CHANGE_LEGS': return{\r\n                              ...state,\r\n                              equippedLegs: payload\r\n                            }\r\n      case 'CHANGE_HAND': return{\r\n                              ...state,\r\n                              equippedHands: payload\r\n                            }\r\n      case 'CHANGE_FEET': return{\r\n                              ...state,\r\n                              equippedFeet: payload\r\n                            }                                                        \r\n                            \r\n\r\n      case 'ADD_WEAPON': return{\r\n                            ...state,\r\n                            allWeapons: state.allWeapons.concat(payload)\r\n                          }\r\n      case 'ADD_HEAD': return{\r\n                            ...state,\r\n                            allHelms: state.allHelms.concat(payload)\r\n                          }\r\n      case 'ADD_CAPE': return{\r\n                            ...state,\r\n                            allCapes: state.allCapes.concat(payload)\r\n                          }\r\n      case 'ADD_NECK': return{\r\n                            ...state,\r\n                            allNecks: state.allNecks.concat(payload)\r\n                          }\r\n      case 'ADD_AMMO': return{\r\n                            ...state,\r\n                            allAmmo: state.allAmmo.concat(payload)\r\n                          }\r\n      case 'ADD_BODY': return{\r\n                            ...state,\r\n                            allBodies: state.allBodies.concat(payload)\r\n                          }\r\n      case 'ADD_SHIELD': return{\r\n                            ...state,\r\n                            allShields: state.allShields.concat(payload)\r\n                          }\r\n      case 'ADD_LEGS': return{\r\n                            ...state,\r\n                            allLegs: state.allLegs.concat(payload)\r\n                          }\r\n      case 'ADD_HANDS': return{\r\n                            ...state,\r\n                            allHands: state.allHands.concat(payload)\r\n                          }  \r\n      case 'ADD_FEET': return{\r\n                            ...state,\r\n                            allFeet: state.allFeet.concat(payload)\r\n                          } \r\n      case 'ADD_RING': return{\r\n                            ...state,\r\n                            allRings: state.allRings.concat(payload)\r\n                          }\r\n      case 'ADD_NECK': return{\r\n                            ...state,\r\n                            allNecks: state.allNecks.concat(payload)\r\n                          }\r\n      case 'ADD_BOSS': return{\r\n                          ...state, \r\n                          allBosses: state.allBosses.concat(payload)\r\n      }\r\n      default: console.log('NO REDUCER MATCH:', payload);                                                                                                                                                         \r\n      \r\n    }\r\n    return state;\r\n}\r\n  \r\n\r\nconst store = createStore(\r\n    reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store",["52","53"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js",[],["54","55"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js",["56","57"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js",["58"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js",["59"],"import React, {Component} from 'react'\r\nimport {connect} from 'react-redux';\r\n\r\nclass DropDownList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            equipped: '',\r\n            icon: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async handleChange(event){\r\n        let itemList = [];\r\n        switch(this.props.type){\r\n            case 'weapon' : itemList = this.props.allWeapons; break;\r\n            case 'helm' : itemList = this.props.allHelms; break;\r\n            case 'cape' : itemList = this.props.allCapes; break;\r\n            case 'neck' : itemList = this.props.allNecks; break;\r\n            case 'ammo' : itemList = this.props.allAmmo; break;\r\n            case 'body' : itemList = this.props.allBodies; break;\r\n            case 'offhand' : itemList = this.props.allShields; break;\r\n            case 'legs' : itemList = this.props.allLegs; break;\r\n            case 'hand' : itemList = this.props.allHands; break;\r\n            case 'feet' : itemList = this.props.allFeet; break;\r\n            case 'ring' : itemList = this.props.allRings; break;\r\n            default: itemList = [];\r\n        }\r\n        const itemID = itemList.find(item => item.name === event.target.innerText).id;\r\n    \r\n        await this.setState({equipped: event.target.innerText});\r\n        console.log('NEW ITEM SELECTED:', this.state.equipped, itemID);\r\n        await fetch(`https://api.osrsbox.com/equipment/${itemID}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                const {equipment, icon} = json;\r\n                let dispatchType = this.props.type.toUpperCase();\r\n                console.log('DISPATCH: ', dispatchType);\r\n                this.setState({icon: icon});\r\n                this.props.dispatch({\r\n                    type: `CHANGE_${dispatchType}`,\r\n                    payload: {name: this.state.equipped, icon: icon}\r\n                })\r\n            }\r\n        ) \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.props.items.map((item, index) =>{\r\n                return(<li onClick={this.handleChange} key={index}>{item}</li>)\r\n            }) \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        allWeapons: state.allWeapons,\r\n        allAmmo: state.allAmmo,\r\n        allBodies: state.allBodies,\r\n        allCapes: state.allCapes,\r\n        allNecks: state.allNecks,\r\n        allShields: state.allShields,\r\n        allLegs: state.allLegs,\r\n        allHands: state.allHands,\r\n        allFeet: state.allFeet,\r\n        allRings: state.allRings,\r\n        allHelms: state.allHelms,\r\n        equippedHead: state.equippedHead,\r\n        equippedCape: state.equippedCape,\r\n        equippedNeck: state.equippedNeck,\r\n        equippedAmmo: state.equippedAmmo,\r\n        equippedWeapon: state.equippedWeapon,\r\n        equippedOffhand: state.equippedOffhand,\r\n        equippedLegs: state.equippedLegs,\r\n        equippedHands: state.equippedHands,\r\n        equippedFeet: state.equippedFeet,\r\n        equippedRing: state.equippedRing \r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(DropDownList)","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js",[],["60","61"],{"ruleId":"62","severity":1,"message":"63","line":131,"column":7,"nodeType":"64","messageId":"65","endLine":134,"endColumn":28},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":18,"column":13,"nodeType":"74","messageId":"75","endLine":18,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":44,"column":24,"nodeType":"74","messageId":"75","endLine":44,"endColumn":33},{"ruleId":"72","severity":1,"message":"77","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":16},{"ruleId":"72","severity":1,"message":"78","line":37,"column":24,"nodeType":"74","messageId":"75","endLine":37,"endColumn":33},{"ruleId":"66","replacedBy":"79"},{"ruleId":"68","replacedBy":"80"},"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar","'hitpoints' is assigned a value but never used.","'hiscores' is defined but never used.","'equipment' is assigned a value but never used.",["81"],["82"],"no-global-assign","no-unsafe-negation"]