[{"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js":"1","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js":"2","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js":"3","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js":"4","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js":"5","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js":"6","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js":"7","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js":"8","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js":"9","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js":"10","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js":"11","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js":"12","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerSkillSlot.js":"13","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelect.js":"14","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelectItem.js":"15","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyles.js":"16","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyleItem.js":"17"},{"size":6577,"mtime":1614834099448,"results":"18","hashOfConfig":"19"},{"size":4349,"mtime":1614830830941,"results":"20","hashOfConfig":"19"},{"size":508,"mtime":1614830828224,"results":"21","hashOfConfig":"19"},{"size":7509,"mtime":1614830830972,"results":"22","hashOfConfig":"19"},{"size":6179,"mtime":1607825585674,"results":"23","hashOfConfig":"24"},{"size":17115,"mtime":1615857792775,"results":"25","hashOfConfig":"19"},{"size":810,"mtime":1614928932625,"results":"26","hashOfConfig":"19"},{"size":362,"mtime":1614830831279,"results":"27","hashOfConfig":"19"},{"size":2506,"mtime":1614830830910,"results":"28","hashOfConfig":"19"},{"size":2349,"mtime":1614830831018,"results":"29","hashOfConfig":"19"},{"size":2520,"mtime":1614830830926,"results":"30","hashOfConfig":"19"},{"size":618,"mtime":1607751077394,"results":"31","hashOfConfig":"24"},{"size":1936,"mtime":1615860782767,"results":"32","hashOfConfig":"19"},{"size":683,"mtime":1615859842866,"results":"33","hashOfConfig":"19"},{"size":1572,"mtime":1615859626600,"results":"34","hashOfConfig":"19"},{"size":2105,"mtime":1615859004357,"results":"35","hashOfConfig":"19"},{"size":696,"mtime":1615613400700,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1jhv7jo",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"k2xskb",{"filePath":"50","messages":"51","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"39"},"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js",[],["75","76"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js",["77"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport image from './../zulrah.png'\r\nimport MonsterSkillSlot from './MonsterSkillSlot'\r\nimport './../stylesheets/MonsterInfo.css'\r\n\r\nclass MonsterInfoCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            displayItems: [],\r\n            selected: ''\r\n        }\r\n        this.filterList = this.filterList.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        let pageNumber = 1;\r\n        let eMax_Pages = 57;\r\n        let a = new Date();\r\n        console.log('Beginning fetch....');\r\n        for(let i = pageNumber; i <= eMax_Pages; i++){\r\n        await fetch(`https://api.osrsbox.com/monsters?max_results=50&&page=${i}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                for (let j = 0; j < json._items.length; j++) {\r\n                    const {category, name, id} = json._items[j];\r\n                    if(category.includes('boss')){\r\n                        this.props.dispatch({\r\n                            type: 'ADD_BOSS',\r\n                            payload: {name: name.toLowerCase(), id: id}\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    async handleChange(event){\r\n        let itemList = this.props.allBosses;\r\n        const itemID = itemList.find(item => item.name === event.target.innerText).id;\r\n        await this.setState({selected: event.target.innerText});\r\n        console.log('NEW ITEM SELECTED:', this.state.selected, itemID);\r\n        await fetch(`https://api.osrsbox.com/monsters/${itemID}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                const {\r\n                    name,\r\n                    hitpoints, \r\n                    combat_level, \r\n                    id,        \r\n                    defence_level, \r\n                    magic_level, \r\n                    defence_stab,           \r\n                    defence_slash, \r\n                    defence_crush, \r\n                    defence_magic,              \r\n                    defence_ranged\r\n                } = json;\r\n                this.props.dispatch({\r\n                    type: `SELECTED_BOSS`,\r\n                    payload: {                    \r\n                        name: name,\r\n                        hitpoints: hitpoints,  \r\n                        combat_level: combat_level, \r\n                        id: id,     \r\n                        defence_level: defence_level, \r\n                        magic_level: magic_level, \r\n                        defence_stab: defence_stab,           \r\n                        defence_slash: defence_slash, \r\n                        defence_crush: defence_crush, \r\n                        defence_magic: defence_magic,              \r\n                        defence_ranged: defence_ranged\r\n                    }\r\n                })\r\n            }\r\n        ) \r\n    }\r\n    async filterList(event){\r\n        console.log('MONSTER CARD FILTER', event.target.value);\r\n        let currList = this.props.allBosses;\r\n        let newList = [];\r\n        for(let item of currList){\r\n            newList.push(item.name);\r\n        }\r\n        let displayList = [];\r\n        for(let item of newList){\r\n            if(item.includes(event.target.value.toLowerCase())){\r\n                displayList.push(item);\r\n            }\r\n        }\r\n        await this.setState({displayItems: displayList});\r\n    }\r\n\r\n    render(){\r\n        let firstRow = ['hitpoints', 'defence_level', 'magic_level'];\r\n        let secondRow = ['defence_stab', 'defence_slash', 'defence_crush'];\r\n        let thirdRow = ['defence_magic', 'defence_ranged'];\r\n        return(\r\n            <div className=\"card monster-card\">\r\n                <div className=\"row\">      \r\n                    <button type=\"button\" className=\"boss-select btn-default\" data-toggle=\"dropdown\">{this.props.selectedBoss.name}</button>\r\n                    <ul className=\"dropdown-menu scrollable-menu\" role=\"menu\">\r\n                        <input type=\"search\" onChange={this.filterList} className=\"search-bar\"></input>  \r\n                            {this.state.displayItems.map((item, index) =>{\r\n                                return(<li onClick={this.handleChange} key={index}>{item}</li>)\r\n                            }) }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"boss-img-card\">\r\n                        <img className=\"boss-img\" src={image} alt=\"\"></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row stats-row\">\r\n                        <div className=\"card form-card\">\r\n                            <div className=\"row\">\r\n                                {firstRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {secondRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>                            \r\n                            <div className=\"row\">\r\n                                {thirdRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allBosses: state.allBosses,\r\n        selectedBoss: state.selectedBoss\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MonsterInfoCard)\r\n",["78","79"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js",["80","81","82","83","84","85","86","87","88","89","90","91","92"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerSkillSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelect.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelectItem.js",["93"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyles.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyleItem.js",["94"],"import React, { useState } from 'react'\r\n\r\nconst AttackStyleItem = (props) => {\r\n    \r\n    const handleSelect = async () => {\r\n        if(props.data.selected){\r\n            props.onSelectStyle(parseInt(props.id));\r\n        }\r\n        else{\r\n            props.onSelectStyle(parseInt(props.id));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.data.selected ?\r\n                <img onClick={handleSelect} src={props.data.img} className=\"attack-style-img mr-0.5\" alt=\"\"></img>\r\n            :\r\n                <img onClick={handleSelect} src={props.data.img} className=\"attack-style-img mr-0.5\" alt=\"\"></img>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttackStyleItem",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":21,"column":13,"nodeType":"101","messageId":"102","endLine":21,"endColumn":14},{"ruleId":"95","replacedBy":"103"},{"ruleId":"97","replacedBy":"104"},{"ruleId":"99","severity":1,"message":"105","line":11,"column":17,"nodeType":"101","messageId":"102","endLine":11,"endColumn":22},{"ruleId":"99","severity":1,"message":"106","line":11,"column":24,"nodeType":"101","messageId":"102","endLine":11,"endColumn":30},{"ruleId":"99","severity":1,"message":"107","line":11,"column":32,"nodeType":"101","messageId":"102","endLine":11,"endColumn":38},{"ruleId":"99","severity":1,"message":"108","line":11,"column":40,"nodeType":"101","messageId":"102","endLine":11,"endColumn":45},{"ruleId":"99","severity":1,"message":"109","line":11,"column":47,"nodeType":"101","messageId":"102","endLine":11,"endColumn":52},{"ruleId":"110","severity":1,"message":"111","line":35,"column":9,"nodeType":"112","messageId":"113","endLine":55,"endColumn":10},{"ruleId":"99","severity":1,"message":"105","line":65,"column":17,"nodeType":"101","messageId":"102","endLine":65,"endColumn":22},{"ruleId":"99","severity":1,"message":"106","line":65,"column":24,"nodeType":"101","messageId":"102","endLine":65,"endColumn":30},{"ruleId":"99","severity":1,"message":"107","line":65,"column":32,"nodeType":"101","messageId":"102","endLine":65,"endColumn":38},{"ruleId":"99","severity":1,"message":"108","line":65,"column":40,"nodeType":"101","messageId":"102","endLine":65,"endColumn":45},{"ruleId":"99","severity":1,"message":"109","line":65,"column":47,"nodeType":"101","messageId":"102","endLine":65,"endColumn":52},{"ruleId":"99","severity":1,"message":"114","line":102,"column":13,"nodeType":"101","messageId":"102","endLine":102,"endColumn":29},{"ruleId":"99","severity":1,"message":"115","line":103,"column":13,"nodeType":"101","messageId":"102","endLine":103,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":10,"column":9,"nodeType":"112","messageId":"113","endLine":32,"endColumn":10},{"ruleId":"99","severity":1,"message":"116","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar",["117"],["118"],"'level' is assigned a value but never used.","'potion' is assigned a value but never used.","'prayer' is assigned a value but never used.","'style' is assigned a value but never used.","'other' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'magicPrayerBoost' is assigned a value but never used.","'rangePrayerBoost' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]