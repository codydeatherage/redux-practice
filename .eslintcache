[{"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js":"1","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js":"2","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js":"3","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js":"4","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js":"5","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js":"6","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js":"7","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js":"8","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js":"9","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js":"10","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js":"11","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js":"12","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerSkillSlot.js":"13","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelect.js":"14","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelectItem.js":"15","/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyles.js":"16"},{"size":6059,"mtime":1614830828243,"results":"17","hashOfConfig":"18"},{"size":4349,"mtime":1614830830941,"results":"19","hashOfConfig":"18"},{"size":508,"mtime":1614830828224,"results":"20","hashOfConfig":"18"},{"size":7509,"mtime":1614830830972,"results":"21","hashOfConfig":"18"},{"size":6179,"mtime":1607825585674,"results":"22","hashOfConfig":"23"},{"size":23288,"mtime":1614830830883,"results":"24","hashOfConfig":"18"},{"size":636,"mtime":1614830831044,"results":"25","hashOfConfig":"18"},{"size":362,"mtime":1614830831279,"results":"26","hashOfConfig":"18"},{"size":2506,"mtime":1614830830910,"results":"27","hashOfConfig":"18"},{"size":2349,"mtime":1614830831018,"results":"28","hashOfConfig":"18"},{"size":2520,"mtime":1614830830926,"results":"29","hashOfConfig":"18"},{"size":618,"mtime":1607751077394,"results":"30","hashOfConfig":"23"},{"size":6451,"mtime":1614830830985,"results":"31","hashOfConfig":"18"},{"size":1104,"mtime":1614830830998,"results":"32","hashOfConfig":"18"},{"size":3974,"mtime":1614830831010,"results":"33","hashOfConfig":"18"},{"size":1353,"mtime":1614830830899,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jhv7jo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"k2xskb",{"filePath":"47","messages":"48","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/Store.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipmentDropDown.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/App.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerInfoCard.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterInfoCard.js",["69"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport image from './../zulrah.png'\r\nimport MonsterSkillSlot from './MonsterSkillSlot'\r\nimport './../stylesheets/MonsterInfo.css'\r\n\r\nclass MonsterInfoCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            displayItems: [],\r\n            selected: ''\r\n        }\r\n        this.filterList = this.filterList.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        let pageNumber = 1;\r\n        let eMax_Pages = 57;\r\n        let a = new Date();\r\n        console.log('Beginning fetch....');\r\n        for(let i = pageNumber; i <= eMax_Pages; i++){\r\n        await fetch(`https://api.osrsbox.com/monsters?max_results=50&&page=${i}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                for (let j = 0; j < json._items.length; j++) {\r\n                    const {category, name, id} = json._items[j];\r\n                    if(category.includes('boss')){\r\n                        this.props.dispatch({\r\n                            type: 'ADD_BOSS',\r\n                            payload: {name: name.toLowerCase(), id: id}\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    async handleChange(event){\r\n        let itemList = this.props.allBosses;\r\n        const itemID = itemList.find(item => item.name === event.target.innerText).id;\r\n        await this.setState({selected: event.target.innerText});\r\n        console.log('NEW ITEM SELECTED:', this.state.selected, itemID);\r\n        await fetch(`https://api.osrsbox.com/monsters/${itemID}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                const {\r\n                    name,\r\n                    hitpoints, \r\n                    combat_level, \r\n                    id,        \r\n                    defence_level, \r\n                    magic_level, \r\n                    defence_stab,           \r\n                    defence_slash, \r\n                    defence_crush, \r\n                    defence_magic,              \r\n                    defence_ranged\r\n                } = json;\r\n                this.props.dispatch({\r\n                    type: `SELECTED_BOSS`,\r\n                    payload: {                    \r\n                        name: name,\r\n                        hitpoints: hitpoints,  \r\n                        combat_level: combat_level, \r\n                        id: id,     \r\n                        defence_level: defence_level, \r\n                        magic_level: magic_level, \r\n                        defence_stab: defence_stab,           \r\n                        defence_slash: defence_slash, \r\n                        defence_crush: defence_crush, \r\n                        defence_magic: defence_magic,              \r\n                        defence_ranged: defence_ranged\r\n                    }\r\n                })\r\n            }\r\n        ) \r\n    }\r\n    async filterList(event){\r\n        console.log('MONSTER CARD FILTER', event.target.value);\r\n        let currList = this.props.allBosses;\r\n        let newList = [];\r\n        for(let item of currList){\r\n            newList.push(item.name);\r\n        }\r\n        let displayList = [];\r\n        for(let item of newList){\r\n            if(item.includes(event.target.value.toLowerCase())){\r\n                displayList.push(item);\r\n            }\r\n        }\r\n        await this.setState({displayItems: displayList});\r\n    }\r\n\r\n    render(){\r\n        let firstRow = ['hitpoints', 'defence_level', 'magic_level'];\r\n        let secondRow = ['defence_stab', 'defence_slash', 'defence_crush'];\r\n        let thirdRow = ['defence_magic', 'defence_ranged'];\r\n        return(\r\n            <div className=\"card monster-card\">\r\n                <div className=\"row\">      \r\n                    <button type=\"button\" className=\"boss-select btn-default\" data-toggle=\"dropdown\">{this.props.selectedBoss.name}</button>\r\n                    <ul className=\"dropdown-menu scrollable-menu\" role=\"menu\">\r\n                        <input type=\"search\" onChange={this.filterList} className=\"search-bar\"></input>  \r\n                            {this.state.displayItems.map((item, index) =>{\r\n                                return(<li onClick={this.handleChange} key={index}>{item}</li>)\r\n                            }) }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"boss-img-card\">\r\n                        <img className=\"boss-img\" src={image} alt=\"\"></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row stats-row\">\r\n                        <div className=\"card form-card\">\r\n                            <div className=\"row\">\r\n                                {firstRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {secondRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>                            \r\n                            <div className=\"row\">\r\n                                {thirdRow.map((stat, index)=>{\r\n                                    return(<MonsterSkillSlot stat={stat} key={index}></MonsterSkillSlot>)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allBosses: state.allBosses,\r\n        selectedBoss: state.selectedBoss\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MonsterInfoCard)\r\n",["70","71"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/index.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/reportWebVitals.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DropDownList.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/SingleSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/EquipSlotCard.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/MonsterSkillSlot.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PlayerSkillSlot.js",["89"],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelect.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/PrayerSelectItem.js",[],"/mnt/c/Users/Deatherage/Documents/JSBootCamp/redux-practice/src/components/DataPanel/AttackStyles.js",[],{"ruleId":"90","severity":1,"message":"91","line":21,"column":13,"nodeType":"92","messageId":"93","endLine":21,"endColumn":14},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":12},{"ruleId":"90","severity":1,"message":"99","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":12},{"ruleId":"90","severity":1,"message":"100","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":12},{"ruleId":"90","severity":1,"message":"101","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":12},{"ruleId":"90","severity":1,"message":"102","line":14,"column":16,"nodeType":"92","messageId":"93","endLine":14,"endColumn":21},{"ruleId":"90","severity":1,"message":"103","line":14,"column":23,"nodeType":"92","messageId":"93","endLine":14,"endColumn":29},{"ruleId":"90","severity":1,"message":"104","line":14,"column":31,"nodeType":"92","messageId":"93","endLine":14,"endColumn":37},{"ruleId":"90","severity":1,"message":"105","line":14,"column":39,"nodeType":"92","messageId":"93","endLine":14,"endColumn":44},{"ruleId":"90","severity":1,"message":"106","line":14,"column":46,"nodeType":"92","messageId":"93","endLine":14,"endColumn":51},{"ruleId":"90","severity":1,"message":"102","line":27,"column":16,"nodeType":"92","messageId":"93","endLine":27,"endColumn":21},{"ruleId":"90","severity":1,"message":"103","line":27,"column":23,"nodeType":"92","messageId":"93","endLine":27,"endColumn":29},{"ruleId":"90","severity":1,"message":"104","line":27,"column":31,"nodeType":"92","messageId":"93","endLine":27,"endColumn":37},{"ruleId":"90","severity":1,"message":"105","line":27,"column":39,"nodeType":"92","messageId":"93","endLine":27,"endColumn":44},{"ruleId":"90","severity":1,"message":"106","line":27,"column":46,"nodeType":"92","messageId":"93","endLine":27,"endColumn":51},{"ruleId":"90","severity":1,"message":"107","line":38,"column":15,"nodeType":"92","messageId":"93","endLine":38,"endColumn":22},{"ruleId":"90","severity":1,"message":"108","line":83,"column":13,"nodeType":"92","messageId":"93","endLine":83,"endColumn":29},{"ruleId":"90","severity":1,"message":"109","line":84,"column":13,"nodeType":"92","messageId":"93","endLine":84,"endColumn":29},{"ruleId":"90","severity":1,"message":"110","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":20},"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'img1' is defined but never used.","'img2' is defined but never used.","'img3' is defined but never used.","'img4' is defined but never used.","'level' is assigned a value but never used.","'potion' is assigned a value but never used.","'prayer' is assigned a value but never used.","'style' is assigned a value but never used.","'other' is assigned a value but never used.","'prayers' is assigned a value but never used.","'magicPrayerBoost' is assigned a value but never used.","'rangePrayerBoost' is assigned a value but never used.","'PrayerSelect' is defined but never used.","no-global-assign","no-unsafe-negation"]